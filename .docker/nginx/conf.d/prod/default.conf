server {
    gzip on;
    gunzip on;
    gzip_static on;
    gzip_types text/plain application/xml image/webp application/json;
    gzip_proxied no-cache no-store private expired auth;
    gzip_min_length 1000;

    listen 80;
    server_name api.wheremycageat.com www.api.wheremycageat.com;

    location / {
        proxy_pass http://localhost:3000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Host $server_name;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}

server {
    gzip on;
    gzip_static on;
    gunzip on;
    gzip_types text/plain text/css application/json application/javascript application/octet-stream text/xml application/xml application/xml+rss text/javascript image/x-icon image/webp;
    gzip_proxied no-cache no-store private expired auth;
    gzip_min_length 1000;

    listen 80;
    server_name wheremycageat.com www.wheremycageat.com;

    root /var/www/prod;

    index index.html index.htm;

    location {
        try_files $uri /index.html;
    }

    location ~* \.(?:css|js|webp|json|xml|ttf|woff2|ico)$ {
        expires 1y;
        add_header Cache-Control "public";
    }
}

server {
    if ($host = www.wheremycageat.com) {
        return 301 https://$host$request_uri;
        } # managed by Certbot


        if ($host = wheremycageat.com) {
            return 301 https://$host$request_uri;
            } # managed by Certbot


            listen 80 default_server;
            listen [::]:80 default_server;

            server_name wheremycageat.com www.wheremycageat.com;
            return 404; # managed by Certbot

        }